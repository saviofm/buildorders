const term = require('../lib/util/term')

module.exports = Object.assign(add, {
  options: ['--for', '--out', '--data:for'],
  shortcuts: ['-4', '-o'],
  flags: ['--force', '--verbose', '--internal-unified-runtime-charts'],
  help: `
# SYNOPSIS

    *cds add* <feature | comma-separated list of features>

    Adds one or more features to an existing project - grow as you go.

    The following features are supported so far:

    *hana*                  - add support for SAP HANA

    *sqlite*                - add support for SQLite databases

    *xsuaa*                 - add support for authentication via XSUAA

    *multitenancy*          - add support for multitenancy

    *toggles*               - add support for feature toggles

    *extensibility*         - add support for extensibility

    *approuter*             - add support for application routing

    *file-based-messaging*  - add support for file-based messaging

    *enterprise-messaging*  - add support for SAP Event Mesh

    *redis-messaging*       - add support for Redis messaging

    *kibana-logging*        - add support for Kibana formatting

    *mta*                   - add support for MTA-based deployment

    *cf-manifest*           - add support for CF-native deployment

    *helm*                  - add support for Helm-based Kyma deployment

    *html5-repo*            - add support for the HTML5 repository

    *pipeline*              - add files for CI/CD pipeline integration

    *tiny-sample*           - add minimal sample files

    *sample*                - add sample files including Fiori UI

    *data*                  - add CSV headers for modeled entities

    *typer*                 - add type generation for CDS models

    *lint*                  - add support for CDS Lint


# OPTIONS

    *--for* <profile>

      Write configuration data for the given profile.

    *--data:for* <entity name or prefix>

      Add data content for entities matching the given pattern.  If it contains
      meta characters like '^' or '*', it is treated like a regular expression,
      otherwise as a prefix.

    *-o* | *--out* <target folder>

      Specify output target folder (applicable to ${term.bold('data')} feature only).

    *--force*

      Overwrite all files in case the target files already exist.

# EXAMPLES

    *cds add* sample
    *cds add* multitenancy,hana,xsuaa --for production
    *cds add* data --data:for my.namespace.MyEntity
    *cds add* mta
    *cds add* helm


# SEE ALSO

  *cds init*

`});

async function add(args, options = {}) {
  const CDSGenerator = require('../lib/init');
  const generator = new CDSGenerator();
  await generator.addCmd(args[0], options);
}
