const { join } = require('path')
const { readProject } = require('../../util/projectReader')
const { mergeJSON, mergeYAML } = require('../../util/merge')
const { srvNode4, srvJava4, mtxSidecar4, kibana, approuter } = require('../_merging/registry-mta')

module.exports = class KibanaTemplate extends require('../templateBase') {

    static hasFacet(env) {
        return env.features.kibana_formatter
    }

    async canRun() {
        const { hasMta, hasHelm, isJava } = await readProject(this.options)
        if (hasHelm && !hasMta) throw `'cds add kibana' is not available for Kyma yet`
        if (isJava) throw `'cds add kibana' is not available for Java yet`
        return true
    }

    async run() {
        const project = await readProject(this.options)
        const { configFile } = project
        await mergeJSON(configFile, join(__dirname, 'files', 'package.json.hbs'), project)
        await this.runDependentMerging()
    }

    async runDependentMerging() {
        const project = await readProject(this.options)
        const { hasMta, hasApprouter, isJava, isMultitenant, srvPath } = project

        if (hasMta) {
            const srv = (isJava ? srvJava4 : srvNode4)(srvPath)
            const additions = [srv, kibana]
            const relationships = [{
                insert: [kibana, 'name'],
                into: [srv, 'requires', 'name']
            }]
            if (isMultitenant) {
                const mtxSidecar = mtxSidecar4(isJava ? 'mtx/sidecar' : 'gen/mtx/sidecar')
                additions.push(mtxSidecar)
                relationships.push({
                    insert: [kibana, 'name'],
                    into: [mtxSidecar, 'requires', 'name']
                })
            }
            if (hasApprouter) {
                additions.push(approuter)
                relationships.push({
                    insert: [kibana, 'name'],
                    into: [approuter, 'requires', 'name']
                })
            }
            await mergeYAML('mta.yaml', join(__dirname, 'files', 'mta.yaml.hbs'), project, { additions, relationships })
        }
    }
}
