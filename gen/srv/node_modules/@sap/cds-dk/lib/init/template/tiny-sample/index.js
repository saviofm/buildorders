const { join } = require('path')
const cds = require('../../../cds')
const { copyFiles } = require('../../util/template')
const commandUtil = require('../../../util/command')
const mvnArchetypes = require('../../util/mvn')
const term = require('../../../util/term')
const { PROJECT_TYPE: { java, nodejs }, OPTIONS: { JAVA }, URLS } = require('../../constants')

module.exports = class TinySampleTemplate extends require('../templateBase') {

    async run() {
        switch (this.getProjectType()) {
            case java:   return this._addJavaSamples()
            case nodejs: return this._addNodejsSamples()
        }
    }

    async _addJavaSamples() {
        if (!this.options.add.has(JAVA)) {
            const mvnAddSamplesArgs = mvnArchetypes.getAddSamplesCmdArgs(this.options)
            try {
                await commandUtil.spawnCommand('mvn', mvnAddSamplesArgs, { cwd: cds.root })
                const mvnAddTestsArgs = mvnArchetypes.getAddTestsCmdArgs(this.options)
                await commandUtil.spawnCommand('mvn', mvnAddTestsArgs, { cwd: cds.root })
            } catch (err) {
                if (err.code === 'ENOENT' && err.path === 'mvn') {
                    throw `Maven executable 'mvn' not found, follow ${term.info(URLS.MAVEN_INSTALL_HELP)} and install Maven on your machine.`
                }
                throw err
            }
        }
    }

    async _addNodejsSamples() {
        const { db, srv } = (await this.getEnv()).folders
        await copyFiles(join(__dirname, 'files', 'nodejs', 'db'), db, {}, this.options.force)
        await copyFiles(join(__dirname, 'files', 'nodejs', 'srv'), srv, { dbFolder: db.replace(/[\\/]+$/, '') }, this.options.force)
    }
}
