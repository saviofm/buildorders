const { join } = require('path')
const cds = require('../../../cds')
const { exists } = cds.utils
const { copyRenderedYAML } = require('../../../util/fs')
const { readProject } = require('../../util/projectReader')
const { mergeJSON, sort } = require('../../util/merge')

module.exports = class MtaTemplate extends require('../templateBase') {

    static hasFacet(_, options) {
        if (!options?.add.has('mta') && options?.add.has('helm')) return false
        return exists('mta.yaml')
    }

    getRelatedFacets() {
        return ['approuter', 'xsuaa', 'multitenancy', 'hana', 'extensibility', 'enterprise-messaging', 'enterprise-messaging-shared', 'redis-messaging', 'connectivity', 'destination']
    }

    async run() {
        const project = await readProject(this.options)
        if (!exists('mta.yaml')) {
            await copyRenderedYAML(join(__dirname, 'files', 'mta.yaml.hbs'), 'mta.yaml', project)
        }
        await mergeJSON('package.json', join(__dirname, 'files', 'package.json'))
        await sort('package.json', 'devDependencies')
    }
}
