/* eslint-disable no-empty */
const fs = require('fs')
const path = require('path')
const cds = require('../../../cds')
const BuildTaskHandlerEdmx = require('../buildTaskHandlerEdmx')
const ResourcesTarProvider = require('./resourcesTarBuilder')
const { FOLDER_GEN } = require('../../constants')

class MtxModuleBuilder extends BuildTaskHandlerEdmx {
    get priority() {
        // should be scheduled after 'hana' build tasks are finished
        return BuildTaskHandlerEdmx.PRIORITY_MIN_VALUE
    }
    init() {
        super.init()
    }

    async build() {
        // Non-sidecar scenario: model-provider is implemented by the Nodejs app itself (default for Nodejs).
        // Only create resources TAR, compiled CSN(s) are created by the Nodejs app build task.
        const dest = cds.env.build.target !== "." ? this.task.dest : path.join(this.task.dest, FOLDER_GEN)
        const model = await this.model()
        if (!model) {
            return
        }
        return new ResourcesTarProvider(this).createTar(dest, model)
    }

    async clean() {
        // staging build content is deleted by BuildTaskEngine
        if (cds.env.build.target === '.') {
            // remove 'gen' folder
            return fs.promises.rm(path.join(this.task.dest, FOLDER_GEN), { force: true, recursive: true })
        }
    }
}
module.exports = MtxModuleBuilder
