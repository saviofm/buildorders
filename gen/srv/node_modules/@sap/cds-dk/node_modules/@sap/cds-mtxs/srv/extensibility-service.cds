// using { cds.xt.TAR } from './model-provider'; //> IMPORTANT: don't add this as it will cause services loaded twice
using { cds.xt.Extensions } from '../db/extensions';

@protocol: 'rest'
@(requires : ['cds.UIFlexDeveloper', 'cds.ExtensionDeveloper', 'internal-user'])
service cds.xt.ExtensibilityService @(path:'/-/cds/extensibility', impl:'@sap/cds-mtxs/srv/extensibility-service.js') {
  // TODO: async jobs

  type ActivationLevel : Extensions:activated;
  type TAR : LargeBinary;
  type CSN : String; // REVISIT: should reuse cds.xt.CSN
  type CSN_OR_CDL: String;
  type FILE {
    name: String;
    content: LargeString;
  }

  // UIFLEX API
   @(requires : ['cds.UIFlexDeveloper', 'cds.ExtensionDeveloper'])
  action addExtension(extensions : array of CSN);  // REVISIT: change to array of CSN extensions

  // Experimental API
  // deprecated
  @(requires : ['cds.ExtensionDeveloper', 'internal-user'])
  action add(
    extension  : CSN_OR_CDL,
    tag        : Extensions:tag, // optional
    activate   : ActivationLevel, // default #database
    tenant     : String // optional, for internal-user only
  );

  // always update tags, allow empty extensions
  @(requires : ['cds.ExtensionDeveloper', 'internal-user'])
  action set(
    extension  : array of CSN_OR_CDL,
    resources  : array of FILE,
    tag        : Extensions:tag, // optional
    activate   : ActivationLevel, // default #database
    tenant     : String // optional, for internal-user only
  );

  // Experimental API
  // use as production flag
  @(requires : ['cds.ExtensionDeveloper', 'internal-user'])
  action promote(
    tag       : Extensions:tag, // optional
    activate  : ActivationLevel, // default #database
    tenant    : String // optional, for internal-user only
  );

  @(requires : ['cds.ExtensionDeveloper'])
  action pull() returns TAR;

  @(requires : ['cds.ExtensionDeveloper'])
  action push (
    extension : LargeBinary, // REVISIT: Using TAR here leads to a strange type check failure
    tag       : Extensions:tag,
    tenant     : String // optional, for internal-user only
  );

  // REVISIT: separate action for transport -> later

  event tenantUpdated {
    tenant: String;
  }
}
